buildscript {
    ext {
        lombokVersion = "4.1.6"
        junitPlatformVersion = "1.2.0"
        dependencyManagementVersion = "1.0.9.RELEASE"
        springBootVersion = "2.2.6.RELEASE"
        protobufVersion = "0.8.12"
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://maven.aliyun.com/repository/public" }
    }

    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:$lombokVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$dependencyManagementVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:$protobufVersion"
    }
}

group "com.github.aaric"
version "0.4.1-SNAPSHOT"

apply plugin: "java"
apply plugin: "io.freefair.lombok"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://repository.incarcloud.com/content/groups/public" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    all {
        exclude group: "junit", module: "junit"
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        /*exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"*/
    }
}

dependencies {
    compile("org.slf4j:slf4j-api")

    compile("org.apache.commons:commons-lang3")

    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-data-redis")

    testCompile "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testCompile "org.springframework.boot:spring-boot-starter-test"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }

    dependencies {
        dependencySet(group: "org.slf4j", version: "1.7.30") {
            entry "slf4j-api"
            entry "slf4j-simple"
            entry "slf4j-log4j12"
        }

        dependency "org.apache.commons:commons-io:1.3.2"
        dependency "org.apache.commons:commons-lang3:3.10"
        dependency "org.apache.commons:commons-collections4:4.4"
    }
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"
}

task sourceJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier "sources"
}

test {
    useJUnitPlatform()
}

task removeLombokConfig() {
    def subProjectPath = project.projectDir
    if (null != subProjectPath) {
        def lombokConfigFile = new File(subProjectPath, "lombok.config")
        if (lombokConfigFile.exists()) {
            lombokConfigFile.delete()
        }
    }
}

task removeOutputLog() {
    def subProjectPath = project.projectDir
    if (null != subProjectPath) {
        def lombokConfigFile = new File(subProjectPath, "output.log")
        if (lombokConfigFile.exists()) {
            lombokConfigFile.delete()
        }
    }
}

defaultTasks "assemble"
